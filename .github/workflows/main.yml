name: nixcfg CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    name: CI for nixcfg
    runs-on: self-hosted # ANY COMMAND USED BELOW MUST BE DECLARED IN action-runner/default.nix
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Formatting with nixfmt
        run: nixfmt . -c

      - name: Antipattern linting for Nix code with statix
        run: statix check . -i docker-compose.nix

      - name: Scan nix file for dead code with deadnix
        run: deadnix . -f

      - name: Nix Flake check
        run: nix flake check --all-systems --impure

  # CD:
  #   name: deploy Gecko
  #   runs-on: self-hosted # ANY COMMAND USED BELOW MUST BE DECLARED IN action-runner/default.nix
  #   needs: CI
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4
  #     - uses: dorny/paths-filter@v2
  #       id: changes
  #       with:
  #         filters: |
  #           Gecko:
  #             - 'Gecko/**'
  #           Beaver:
  #             - 'Beaver/**'
  #
  #     - name: Deploy Gecko1
  #       if: steps.changes.outputs.Gecko == 'true'
  #       run: nixos-rebuild switch --flake ./#GeckoNixos1 --target-host GeckoNixos1
  #
  #     - name: Deploy Gecko2
  #       if: steps.changes.outputs.Gecko == 'true'
  #       run: nixos-rebuild switch --flake .#GeckoNixos2 --target-host GeckoNixos2
